{"version":3,"sources":["components/FormularioCategoria.tsx","components/GifElement.tsx","helpers/getHttpGif.tsx","components/GifGrid.tsx","hooks/useHttpGif.tsx","components/GifExpertApp.tsx","index.tsx"],"names":["FormularioCategoria","agregarCategoria","useState","categoria","setCategoria","className","onSubmit","e","preventDefault","alert","type","name","id","value","onChange","nombre","target","placeholder","GifElement","title","url","src","alt","getHttpGif","a","console","log","imagenesGif","encodeURI","fetch","response","json","data","forEach","push","images","downsized_medium","GifGrid","imagenes","loading","setImagenes","useEffect","then","useHttpGif","map","imagen","GifExpertApp","listaCategoria","setListaCategoria","busqueda","length","categoriaNueva","agregado","find","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAuDeA,EAhDa,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,iBAA8B,EACvBC,mBAAS,IADc,mBAClDC,EADkD,KACvCC,EADuC,KA0BzD,OACI,sBACIC,UAAU,aACVC,SAtBsB,SAACC,GAC3BA,EAAEC,iBAEgB,KAAdL,EAMAF,EAAiBE,GAEjBC,EAAa,IAIbK,MAAM,0BAVNA,MAAM,+DAeV,SAII,uBACIC,KAAK,OACLL,UAAU,QACVM,KAAK,YACLC,GAAG,YACHC,MAAQV,EACRW,SAAW,SAAAP,GAAC,OAlCKQ,EAkCmBR,EAAES,OAAOH,WAjCrDT,EAAaW,GADW,IAACA,GAmCjBE,YAAY,2BClCbC,EATI,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,IACxB,OACI,sBAAKf,UAAU,yCAAf,UACI,oBAAIA,UAAU,cAAd,SAA8Bc,IAC9B,qBAAKE,IAAMD,EAAME,IAAMH,EAAQd,UAAU,oB,uBCJxCkB,EAAU,uCAAG,WACtBpB,GADsB,uBAAAqB,EAAA,6DAItBC,QAAQC,IAAI,qBAENC,EAA4B,GAElCF,QAAQC,IAAI,wBACNN,EAAM,4FAA6FQ,UAAUzB,GACnHsB,QAAQC,IAAIN,GAEZK,QAAQC,IAAI,qBAZU,SAaCG,MAAMT,GAbP,cAahBU,EAbgB,OAetBL,QAAQC,IAAI,iBAfU,UAgBCI,EAASC,OAhBV,wBAgBdC,EAhBc,EAgBdA,KAERP,QAAQC,IAAI,uBACZM,EAAKC,SAAQ,SAAC1B,GAAY,IAAD,EACrBoB,EAAYO,KAAK,CACbtB,GAAIL,EAAEK,GACNO,MAAOZ,EAAEY,MACTC,IAAG,UAAEb,EAAE4B,cAAJ,aAAE,EAAUC,iBAAiBhB,MAEpCK,QAAQC,IAAI,6BAEhBD,QAAQC,IAAI,wBACZD,QAAQC,IAAI,sBA5BU,kBA6BfC,GA7Be,4CAAH,sDCkCRU,EA5BC,SAAC,GAChB,IADmBlC,EACpB,EADoBA,UACpB,ECL0B,SAACA,GAAuB,IAAD,EAEbD,mBAAsB,CAClDoC,SAAU,GACVC,SAAS,IAJgC,mBAEtCD,EAFsC,KAE5BE,EAF4B,KAkB7C,OAXAC,qBAAU,WAENlB,EAAWpB,GAAa,eACnBuC,MAAK,SAAAV,GACFQ,EAAY,CACRF,SAAUN,EACVO,SAAS,SAGtB,CAACpC,IAEGmC,EDZuBK,CAAWxC,GAAa,iBAA9CmC,EADZ,EACYA,SAAUC,EADtB,EACsBA,QAElB,OACI,gCACI,6BAAMpC,IACJoC,GAAW,4CACb,qBAAKlC,UAAU,OAAf,SAEQiC,EAASM,KAAI,SAAAC,GAAM,OACf,cAAC,EAAD,CAEIjC,GAAIiC,EAAOjC,GACXO,MAAO0B,EAAO1B,MACdC,IAAKyB,EAAOzB,KAHPyB,EAAOjC,aEqBzBkC,EArCM,WAAO,IAAD,EACqB5C,mBAAS,CAAC,OAAQ,WAAY,UADnD,mBAChB6C,EADgB,KACAC,EADA,KAiBjBC,EAAWF,EAAeA,EAAeG,OAAS,GAExD,OADAzB,QAAQC,IAAI,sCAER,qCACI,gDACA,uBACA,cAAC,EAAD,CACIzB,iBArBa,SAACkD,GACtB,IAAIC,GAAoB,EAUxB,OATKL,EAAeM,MAAK,SAAAC,GAAC,OAAIA,IAAMH,OAEhCH,EAAkB,GAAD,mBACVD,GADU,CAEbI,KAEJC,GAAW,GAGRA,KAYH,qBAAK/C,UAAU,aAAf,SAEQ,cAAC,EAAD,CACIF,UAAY8C,U,MC5BpCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.584aba80.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\ninterface props {\r\n    agregarCategoria: (categoriaNueva: string) => boolean\r\n} \r\n\r\nconst FormularioCategoria = ({ agregarCategoria }: props) => {\r\n    const [categoria, setCategoria] = useState(\"\");\r\n\r\n    const actualizarCategoria = (nombre: string) => {\r\n        setCategoria(nombre);\r\n    };\r\n\r\n    const handleSubmitCategoria = (e: React.FormEvent<HTMLFormElement>) : void => {\r\n        e.preventDefault();\r\n\r\n        if (categoria === '')\r\n        {\r\n            alert(\"La categoria se encuentra vacía, no es posible agregar.\");\r\n            return;\r\n        }\r\n\r\n        if (agregarCategoria(categoria))\r\n        {\r\n            setCategoria(\"\");\r\n        }\r\n        else\r\n        {\r\n            alert('La categoria ya existe');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form \r\n            className=\"formulario\"\r\n            onSubmit={ handleSubmitCategoria }\r\n        >\r\n            <input \r\n                type=\"text\" \r\n                className=\"field\" \r\n                name=\"categoria\" \r\n                id=\"categoria\"\r\n                value={ categoria }\r\n                onChange={ e => actualizarCategoria(e.target.value) }\r\n                placeholder=\"buscar categoria...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nFormularioCategoria.propTypes = {\r\n    agregarCategoria: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FormularioCategoria;","import { elementGif } from '../interfaces/elementGif';\r\n\r\nconst GifElement = ({title, url}: elementGif) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <h3 className=\"card__title\">{ title }</h3>\r\n            <img src={ url } alt={ title } className=\"card_imagen\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifElement;","import { elementGif } from \"../interfaces/elementGif\";\r\n\r\nexport const getHttpGif = async (\r\n    categoria: string\r\n): Promise<elementGif[]> => {\r\n    \r\n    console.log(\"Inicia getHttpGif\");\r\n\r\n    const imagenesGif: elementGif[] = [];\r\n\r\n    console.log(\"Petición HTTP GET\");\r\n    const url = 'https://api.giphy.com/v1/gifs/search?api_key=kWPkAX8OZD2IuL2R9CqqjYETGq8QyLp3&limit=15&q='+ encodeURI(categoria);\r\n    console.log(url);\r\n\r\n    console.log(\"Response HTTP GET\");\r\n    const response = await fetch(url)\r\n    \r\n    console.log(\"JSON HTTP GET\");\r\n    const { data } = await response.json();\r\n\r\n    console.log(\"Inicia Iteración\");\r\n    data.forEach((e: any) => {\r\n        imagenesGif.push({\r\n            id: e.id,\r\n            title: e.title,\r\n            url: e.images?.downsized_medium.url\r\n        });\r\n        console.log(\"Siguiente Iteración\");\r\n    });\r\n    console.log(\"Termina Iteración\");\r\n    console.log(\"Termina getHttpGif\");\r\n    return imagenesGif;\r\n};","import PropTypes from 'prop-types';\r\nimport GifElement from './GifElement';\r\nimport { useHttpGif } from '../hooks/useHttpGif';\r\n\r\ninterface props {\r\n    categoria?: string\r\n}\r\n\r\nconst GifGrid = ( { categoria } : props) => \r\n{\r\n    const { imagenes, loading } = useHttpGif(categoria || 'tecnología');\r\n\r\n    return (\r\n        <div>\r\n            <h3>{ categoria }</h3>\r\n            { loading && <p>cargando...</p> }\r\n            <div className=\"grid\">\r\n                {\r\n                    imagenes.map(imagen => (\r\n                        <GifElement \r\n                            key={imagen.id}\r\n                            id={imagen.id}\r\n                            title={imagen.title} \r\n                            url={imagen.url}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\";\r\nimport { getHttpGif } from \"../helpers/getHttpGif\";\r\nimport { dataHttpGif } from \"../interfaces/dataHttpGif\";\r\n\r\nexport const useHttpGif = (categoria: string) => {\r\n    \r\n    const [imagenes, setImagenes] = useState<dataHttpGif>({\r\n        imagenes: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => \r\n    {\r\n        getHttpGif(categoria || 'programador')\r\n            .then(data => {\r\n                setImagenes({\r\n                    imagenes: data,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [categoria]);\r\n\r\n    return imagenes;\r\n}","import { useState } from \"react\";\r\nimport FormularioCategoria from \"./FormularioCategoria\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [listaCategoria, setListaCategoria] = useState(['risa', 'tristesa', 'enojo']);\r\n\r\n    const agregarCategoria = (categoriaNueva: string): boolean => {\r\n        let agregado: boolean = false;\r\n        if (!listaCategoria.find(c => c === categoriaNueva))\r\n        {\r\n            setListaCategoria([\r\n                ...listaCategoria,\r\n                categoriaNueva\r\n            ]);\r\n            agregado = true;\r\n        }\r\n\r\n        return agregado;\r\n    };\r\n\r\n    const busqueda = listaCategoria[listaCategoria.length - 1];\r\n    console.log(\"renderizado componente pricipal...\");\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <hr />\r\n            <FormularioCategoria \r\n                agregarCategoria={ agregarCategoria }\r\n            />\r\n            <div className=\"categorias\">\r\n                {\r\n                    <GifGrid \r\n                        categoria={ busqueda }\r\n                    />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}